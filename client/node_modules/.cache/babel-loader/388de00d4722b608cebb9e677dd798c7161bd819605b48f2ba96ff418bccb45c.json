{"ast":null,"code":"export var checkPasswordStrength = function checkPasswordStrength(password) {\n  if (password.length <= 5) {\n    if (password.length <= 0) {\n      return {\n        text: \"\",\n        color: \"\"\n      };\n    }\n    return {\n      text: \"Weak\",\n      color: \"danger\"\n    };\n  } else if (password.length <= 8) {\n    return {\n      text: \"Normal\",\n      color: \"warning\"\n    };\n  } else {\n    return {\n      text: \"Strong\",\n      color: \"success\"\n    };\n  }\n};\nexport var handlePasswordChange = function handlePasswordChange(e, setPasswordCallback, checkPasswordStrengthCallback) {\n  var password = e.target.value;\n  setPasswordCallback(password);\n  checkPasswordStrengthCallback(password);\n};\n// const express = require(\"express\");\n// const app = express();\n// const bodyParser = require(\"body-parser\");\n\n// // body-parser 설정\n// app.use(bodyParser.urlencoded({ extended: true }));\n// app.use(bodyParser.json());\n\n// // POST 요청 처리\n// app.post(\"/auth/register\", (req, res) => {\n//   const username = req.body.username;\n//   const password = req.body.password;\n//   console.log(`username: ${username}, password: ${password}`);\n//   // 여기에 회원가입 로직을 작성\n//   res.send(\"회원가입이 완료되었습니다.\");\n// });\n\n// // 서버 실행\n// app.listen(3000, () => {\n//   console.log(\"서버가 실행되었습니다.\");\n// });\n\nexport default {\n  checkPasswordStrength: checkPasswordStrength,\n  handlePasswordChange: handlePasswordChange\n};","map":{"version":3,"names":["checkPasswordStrength","password","length","text","color","handlePasswordChange","e","setPasswordCallback","checkPasswordStrengthCallback","target","value"],"sources":["/root/Web/web-simul/src/views/functions/register.js"],"sourcesContent":["export const checkPasswordStrength = (password) => {\n  if (password.length <= 5) {\n    if (password.length <= 0) {\n      return { text: \"\", color: \"\" };\n    }\n    return { text: \"Weak\", color: \"danger\" };\n  } else if (password.length <= 8) {\n    return { text: \"Normal\", color: \"warning\" };\n  } else {\n    return { text: \"Strong\", color: \"success\" };\n  }\n};\n\nexport const handlePasswordChange = (\n  e,\n  setPasswordCallback,\n  checkPasswordStrengthCallback\n) => {\n  const password = e.target.value;\n  setPasswordCallback(password);\n  checkPasswordStrengthCallback(password);\n};\n// const express = require(\"express\");\n// const app = express();\n// const bodyParser = require(\"body-parser\");\n\n// // body-parser 설정\n// app.use(bodyParser.urlencoded({ extended: true }));\n// app.use(bodyParser.json());\n\n// // POST 요청 처리\n// app.post(\"/auth/register\", (req, res) => {\n//   const username = req.body.username;\n//   const password = req.body.password;\n//   console.log(`username: ${username}, password: ${password}`);\n//   // 여기에 회원가입 로직을 작성\n//   res.send(\"회원가입이 완료되었습니다.\");\n// });\n\n// // 서버 실행\n// app.listen(3000, () => {\n//   console.log(\"서버가 실행되었습니다.\");\n// });\n\nexport default { checkPasswordStrength, handlePasswordChange };\n"],"mappings":"AAAA,OAAO,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIC,QAAQ,EAAK;EACjD,IAAIA,QAAQ,CAACC,MAAM,IAAI,CAAC,EAAE;IACxB,IAAID,QAAQ,CAACC,MAAM,IAAI,CAAC,EAAE;MACxB,OAAO;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAC;IAChC;IACA,OAAO;MAAED,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAS,CAAC;EAC1C,CAAC,MAAM,IAAIH,QAAQ,CAACC,MAAM,IAAI,CAAC,EAAE;IAC/B,OAAO;MAAEC,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAU,CAAC;EAC7C,CAAC,MAAM;IACL,OAAO;MAAED,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAU,CAAC;EAC7C;AACF,CAAC;AAED,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAC/BC,CAAC,EACDC,mBAAmB,EACnBC,6BAA6B,EAC1B;EACH,IAAMP,QAAQ,GAAGK,CAAC,CAACG,MAAM,CAACC,KAAK;EAC/BH,mBAAmB,CAACN,QAAQ,CAAC;EAC7BO,6BAA6B,CAACP,QAAQ,CAAC;AACzC,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe;EAAED,qBAAqB,EAArBA,qBAAqB;EAAEK,oBAAoB,EAApBA;AAAqB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}